name: ci

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # manual
  workflow_dispatch:

env:
  PRE_COMMIT_CACHE: ~/.cache/pre-commit

jobs:
  tox-precommit:
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - "3.8"
        os: [ubuntu-latest]
        env:
          - TOXENV: "pre-commit"
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Configure Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry==1.1.14 tox==3.25.1 tox-gh-actions
      - name: Cache pre-commit
        uses: actions/cache@v3
        with:
          path: ${{ env.PRE_COMMIT_CACHE }}
          key: ${{ matrix.os }}-${{ matrix.python-version }}-pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}
      - name: Run tox
        run: |
          tox
        shell: bash
        env: ${{ matrix.env }}
  tox-tests:
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - "3.8"
          - "3.9"
          - "3.10"
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Configure Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry==1.1.14 tox==3.25.1 tox-gh-actions
      - name: Run tox
        run: |
          tox -p
      - name: set coverage mapping
        run: |
          MATRIX_PYTHON_VERSION=${{matrix.python-version}}
          echo "TOX_COVERAGE_ENV=py${MATRIX_PYTHON_VERSION/./}" >> $GITHUB_ENV
      - name: Upload to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: ./.tox/.coverage.${{ env.TOX_COVERAGE_ENV }}.xml
          verbose: true
          fail_ci_if_error: true
          flags: "${{ env.TOX_COVERAGE_ENV }}"
