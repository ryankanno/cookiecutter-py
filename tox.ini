[tox]
isolated_build = true
skip_missing_interpreters = True
set_env =
  TEMP = {env_tmp_dir}
envlist =
    py3{9,10,11},
    pre-commit,
labels =
    tests = py3{9,10,11}

[gh]
python =
    3.9 = py39
    3.10 = py310
    3.11 = py311

[testenv]
runner = uv-venv-lock-runner
parallel_show_output = true
commands =
    uv run pytest --cov --cov-config=pyproject.toml --cov-append --cov-report term-missing --doctest-modules --cov-report xml:{toxworkdir}/.coverage.{envname}.xml -ra -q -n auto
    uv run coverage xml -o {toxworkdir}/.coverage.{envname}.xml
set_env =
    PIP_DISABLE_VERSION_CHECK = 1
    COVERAGE_FILE={toxworkdir}/.coverage.{envname}
depends =
    py3{9,10,11}: clean

[testenv:pre-commit]
runner = uv-venv-runner
skip_install =
    true
deps =
    pre-commit-uv
commands =
    pre-commit run --all-files --show-diff-on-failure

[testenv:lint]
runner = uv-venv-runner
skip_install =
    true
deps =
    pre-commit-uv
commands =
    pre-commit run --all-files ruff

[testenv:lint-fix]
runner = uv-venv-runner
skip_install =
    true
deps =
    pre-commit-uv
commands =
    pre-commit run --all-files ruff --hook-stage manual

[testenv:docs]
runner = uv-venv-lock-runner
deps =
    sphinx
extracts =
    docs
commands =
    sphinx-apidoc -o docs/sources cookiecutter_py/
    sphinx-build -E -b linkcheck -d "{envtmpdir}{/}doctree" docs "{toxworkdir}{/}docs_out" --color -b html
    sphinx-build -E -b html -d "{envtmpdir}{/}doctree" docs "{toxworkdir}{/}docs_out" --color -b html
    python -c 'print(r"documentation available under file://{toxworkdir}{/}docs_out{/}index.html")'

[testenv:clean]
deps = coverage
skip_install = true
commands = coverage erase
