[tool.poetry]
name = "{{cookiecutter.package_name}}"
version = "0.0.0"
description = "{{ cookiecutter.project_short_description }}"
authors = ["{{ cookiecutter.author_name }} <{{ cookiecutter.author_email }}>"]
readme = "README.rst"
repository = "{{ cookiecutter.project_url }}"
keywords = []
license = "{{ cookiecutter.project_license }}"
classifiers = [
    "Programming Language :: Python",
]

[tool.poetry.dependencies]
python = "^3.8"
structlog = "^22.3.0"

[tool.poetry.dev-dependencies]
dunamai = "^1.16.0"
flake8 = "^5.0"
flake8-isort = "^6.0.0"
ipython = "^8.10.0"
isort = "^5.12.0"
konch = "^4.2.2"
mypy = "^1.0"
pdbpp = "^0.10.0"
pre-commit = "^3.1.1"
pytest = "^7.2.1"
pytest-cov = "^4.0"
pytest-mock = "^3.1.0"
pytest-randomly = "^3.0"
pytest-xdist = "^3.2.0"
sphinx = "^6.1.3"
tox = "^4.4.6"
black = "^23.1"
hypothesis = "^6.68.2"
mutmut = "^2.4.3"

[tool.mypy]
python_version = "3.8"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
follow_imports = "normal"
ignore_missing_imports = true
no_implicit_optional = true
no_implicit_reexport = false
show_error_codes = true
show_error_context = true
strict_equality = true
strict_optional = true
warn_redundant_casts = true
warn_return_any = true
warn_unused_configs = true
warn_unused_ignores = false

[tool.black]
line-length = 79
skip-string-normalization = true
target_version = ['py{{ cookiecutter.python_version|replace(".", "") }}']
include = '\.pyi?$'
exclude = '''
(
  /(
      \.direnv
     | \.eggs
     | \.git
     | \.hg
     | \.mypy_cache
     | \.nox
     | \.tox
     | \.venv
     | venv
     | \.svn
     | _build
     | buck-out
     | build
     | dist
     | __pypackages__
     | \{\{cookiecutter\.package_name\}\}\/tests
 )/
)
'''

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q -n auto"
testpaths = [
    "tests",
]

[tool.coverage.run]
parallel = true
branch = true
source = ["{{ cookiecutter.package_name }}"]
omit = [
    "*/python?.?/*",
    "*/tests/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "raise AssertionError",
    "raise NotImplementedError",
    "import",
]
show_missing = true
skip_covered = false

[tool.isort]
force_grid_wrap = 0
force_single_line = true
include_trailing_comma = true
lines_after_imports = 2
multi_line_output = 3
use_parentheses = true
known_third_party = []
default_section = "THIRDPARTY"
known_first_party = "{{ cookiecutter.package_name }}"
sections = "FUTURE,STDLIB,THIRDPARTY,FIRSTPARTY,LOCALFOLDER"

[tool.vulture]
make_whitelist = true
min_confidence = 80
paths = ["{{ cookiecutter.package_name }}/", "tests/"]
sort_by_size = true

[tool.bandit]
targets = ["."]
exclude = ["./.tox", "./.git", "./.github", "./.pytest_cache"]
quiet = true

[tool.bandit.assert_used]
exclude = ["*/*_test.py", "*/test_*.py"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
