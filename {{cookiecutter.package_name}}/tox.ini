[tox]
isolated_build = true
skip_missing_interpreters = True
set_env =
  TEMP = {env_tmp_dir}
envlist =
{%- for python_version in cookiecutter.supported_python_versions.split(',') %}
    py{{ python_version|trim|replace('.','') }},
{%- endfor %}
    pre-commit,
labels =
    tests = {%- for python_version in cookiecutter.supported_python_versions.split(',') %}py{{ python_version|trim|replace('.','') }},{%- endfor %}

[gh]
python =
{%- for python_version in cookiecutter.supported_python_versions.split(',') %}
    {{ python_version|trim }} = py{{ python_version|trim|replace('.','') }}
{%- endfor %}

[testenv]
parallel_show_output = true
allowlist_externals =
    uv
commands_pre =
    uv sync --python {env_python} --locked
commands =
    pytest --cov --cov-config=pyproject.toml --cov-append --cov-report term-missing --doctest-modules --cov-report xml:{toxworkdir}/.coverage.{envname}.xml -ra -q -n auto
    coverage xml -o {toxworkdir}/.coverage.{envname}.xml
set_env =
    PIP_DISABLE_VERSION_CHECK = 1
    COVERAGE_FILE={toxworkdir}/.coverage.{envname}
depends =
{%- for python_version in cookiecutter.supported_python_versions.split(',') %}
    py{{ python_version|trim|replace('.','') }}: clean
{%- endfor %}

[testenv:pre-commit]
skip_install =
    true
deps =
    pre-commit-uv
    deptry
commands =
    pre-commit run --all-files --show-diff-on-failure

[testenv:lint]
skip_install =
    true
deps =
    pre-commit-uv
commands =
    pre-commit run --all-files ruff

[testenv:lint-fix]
skip_install =
    true
deps =
    pre-commit-uv
commands =
    pre-commit run --all-files ruff --hook-stage manual

[testenv:docs]
allowlist_externals =
    uv
    sphinx-apidoc
    sphinx-build
commands_pre =
    uv sync --python {env_python} --locked --group docs
commands =
    sphinx-apidoc -o docs/sources {{ cookiecutter.package_name }}/
    sphinx-build -E -b linkcheck -d "{envtmpdir}{/}doctree" docs "{toxworkdir}{/}docs_out" --color -b html
    sphinx-build -E -b html -d "{envtmpdir}{/}doctree" docs "{toxworkdir}{/}docs_out" --color -b html
    python -c 'print(r"documentation available under file://{toxworkdir}{/}docs_out{/}index.html")'

[testenv:clean]
deps = coverage
skip_install = true
commands = coverage erase
